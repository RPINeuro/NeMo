<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="axon_8h">
    <title>axon.h File Reference</title>
    <programlisting>#include &lt;stdio.h&gt;</programlisting>
    <programlisting>#include &quot;../assist.h&quot;</programlisting>
    <programlisting>#include &quot;../input_simulator.h&quot;</programlisting>
<para>Include dependency diagram for axon.h</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="axon_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for axon.h</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="axon_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Data Structures </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structaxon_state">axonState</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="axon_8h_1ab136d88cfbbb1e9f0f3687908dd54851">axonReceiveMessage</link> (
<link linkend="structaxon_state">axonState</link> * st, <link linkend="struct_msg___data">Msg_Data</link> * M, tw_lp * lp)<para><emphasis>Handles a message sent to an Axon.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="axon_8h_1a4540abe1d7c57cae5b0ff088d3d47fd1">axonReverseState</link> (
<link linkend="structaxon_state">axonState</link> * st, <link linkend="struct_msg___data">Msg_Data</link> * M, tw_lp * lp)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/mplagge/development/tnt_benchmark/models/axon.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">//</emphasis>
2 <emphasis class="comment">//&#32;&#32;axon.h</emphasis>
3 <emphasis class="comment">//&#32;&#32;ROSS_TOP</emphasis>
4 <emphasis class="comment">//</emphasis>
5 <emphasis class="comment">//&#32;&#32;Created&#32;by&#32;Mark&#32;Plagge&#32;on&#32;6/18/15.</emphasis>
6 <emphasis class="comment">//</emphasis>
7 <emphasis class="comment">//</emphasis>
8 
9 <emphasis class="preprocessor">#ifndef&#32;__ROSS_TOP__axon__</emphasis>
10 <emphasis class="preprocessor">#define&#32;__ROSS_TOP__axon__</emphasis>
11 
12 <emphasis class="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
13 <emphasis class="preprocessor">#include&#32;&quot;../assist.h&quot;</emphasis>
14 <emphasis class="preprocessor">#include&#32;&quot;../input_simulator.h&quot;</emphasis>
15 
<link linkend="structaxon_state">16 </link><emphasis class="keyword">typedef</emphasis>&#32;<emphasis class="keyword">struct&#32;</emphasis>AxonState&#32;{
<link linkend="structaxon_state_1a217ba44fb923dc4dc62bb73b14e61517">17 </link>&#32;&#32;&#32;&#32;<link linkend="assist_8h_1ad77e6fc5a9b03d46e7c97b7c4b92e89f">_statT</link>&#32;<link linkend="structaxon_state_1a217ba44fb923dc4dc62bb73b14e61517">sendMsgCount</link>;
<link linkend="structaxon_state_1a665999819b255f36d756f17b85bc9a03">18 </link>&#32;&#32;&#32;&#32;tw_lpid&#32;<link linkend="structaxon_state_1a665999819b255f36d756f17b85bc9a03">destSynapse</link>;
19 
<link linkend="structaxon_state_1ad1d67487729ff78dd3f00885184b1ef3">20 </link>&#32;&#32;&#32;&#32;<link linkend="structinput_simulator_state">inputSimulatorState</link>&#32;*<link linkend="structaxon_state_1ad1d67487729ff78dd3f00885184b1ef3">sim</link>;
21 }<link linkend="structaxon_state">axonState</link>;
29 <emphasis class="keywordtype">void</emphasis>&#32;<link linkend="axon_8h_1ab136d88cfbbb1e9f0f3687908dd54851">axonReceiveMessage</link>(<link linkend="structaxon_state">axonState</link>&#32;*st,&#32;<link linkend="struct_msg___data">Msg_Data</link>&#32;*M,&#32;tw_lp&#32;*lp);
30 <emphasis class="keywordtype">void</emphasis>&#32;<link linkend="axon_8h_1a4540abe1d7c57cae5b0ff088d3d47fd1">axonReverseState</link>(<link linkend="structaxon_state">axonState</link>&#32;*st,&#32;<link linkend="struct_msg___data">Msg_Data</link>&#32;*M,&#32;tw_lp&#32;*lp);
31 <emphasis class="preprocessor">#endif&#32;</emphasis><emphasis class="comment">/*&#32;defined(__ROSS_TOP__axon__)&#32;*/</emphasis><emphasis class="preprocessor"></emphasis>
    </computeroutput></literallayout>
</section>
