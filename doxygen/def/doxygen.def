AutoGen Definitions dummy;
struct = {
  cp-id     = 'structaxon_state';
  cp-name   = 'axonState';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structaxon_state_1a7fc444364b1559859bccdf91f1e95475';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'recvMsgCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.h';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structaxon_state_1a217ba44fb923dc4dc62bb73b14e61517';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sendMsgCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.h';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structaxon_state_1a665999819b255f36d756f17b85bc9a03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
tw_lpid
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'destSynapse';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.h';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.h';
  cp-fileline  = '14';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structinput_simulator_state';
  cp-name   = 'inputSimulatorState';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1af892db49cef1c5e5d95010561e549678';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outbound';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Represents how many conenctions the input system is attached to in spike_generator_model#outbound.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a569dc67b8984bb0a3616bf17f9763ebb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
tw_lpid *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'connectedSynapses';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
An array of synapses that this is RandomSpikes is attached to.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1ae40f21a48f3157bcad074f424046ed2c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
spikeGenDel
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'spikeGen';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a666eb9ad96121cf3e4ce134e1a4c12c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outputMesh';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Array that represents the output levels per tick.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a97727a3be0dbd5813f860c99733048a8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outputMeshLengh';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Size of the output mesh.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a1333eb5695ae83d1ffccf24b08bc6288';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'randomRate';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If the random value is over this, spike.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'input__simulator_8c_1ad6244e86a3542f8d3c64766e7e7c6746';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'uniformGen';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a18766f12fc4212349fb61b221f83b779';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
selectedRandom
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'randMethod';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Selected random generator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1a0eb8199754a403ccc8eac256f9193a02';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rndFctVal';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
For functions that need a second parameter (eg, binomial etc.), this is the second parameter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structinput_simulator_state_1accc0c3f890194cda401a16f5f54e43cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentOut';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
currentOut is the currently selected output synapse.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Used in sequential mode  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
  cp-fileline  = '42';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Struct that manages the spike generator.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Generally, there should be one of these
per simulation!  
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structleak_fun_del';
  cp-name   = 'leakFunDel';
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  cp-fileline  = '27';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
This is a dec.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 of a function that allows for neurons to have different
leak functions. At this point,
    the only function is a dummy one.
    The functions alter the neuron's current voltage.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'struct_msg___data';
  cp-name   = 'Msg_Data';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_msg___data_1a015b6eb45982e1842ee8fc389a099ced';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
enum evtType
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'eventType';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_msg___data_1a2e49a6bcc6c45ade722f746b1ea707f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rndCallCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_msg___data_1aefc820e92a74047ec7ed74c1c45f818f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_idT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'localID';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sender's local (within a core) id - used for weight lookups.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
  cp-fileline  = '48';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Main message struct.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'struct_neuron_model';
  cp-name   = 'NeuronModel';
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  cp-fileline  = '128';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
This struct maintains the state of an individual neuron.The neuron struct
contains the parameters needed to maintain
 state in the neuron, along with references to output commands (dendrites).
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Each parameter contained within @cite Cassidy2013}@cite Preissl2012}@cite Amir2013}'s models of Neuromporphic design that operate with the neuron are contained within this struct.
 Consider this struct a proto-object, just sans functions.
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structneuron_state';
  cp-name   = 'neuronState';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1af499000d57eeeaeeb6ee0928e1eee4f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_voltT *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'synapticWeightProb';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '175';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
In this simulation, each synappse can have a unique weight.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 In the paper, there is a limit of four different "types" of synapse behavior per neruon. For an accurate sim, there can only be four different values in this array.

Since this is an array, this simulator has the potential to have more power than the actual TrueNorth hardware architecture.
The paper defines this as \form#3
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a4568f103808a436a62d7c7c47dc90e9b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'synapticWeightProbSelect';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
An array determining if each synapse is handled stochastically or deterministically.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Since the actual hardware has 4 synapse types, this setup has more power than the actual TrueNorth architecture.

To ensure model <-> hardware accuracy, at most four different modes should be used per neuron, so that synapses are handled as one of four possible types.  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a62463fa4d33c39297aa5ce3a145d474f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_idT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dendriteCore';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Local core of the remote dendrite.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a73e5b16411af572181411b8fd8d5117d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_idT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dendriteLocal';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Local ID of the remote dendrite &ndash; not LPID, but a local axon value (0-i)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a4199c14c5aabfd52f441e01623bdc84c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
tw_lpid
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dendriteGlobalDest';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
GID of the axon this neuron talks to.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 6.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1aa430f424f34dc59dc27736e27ec61320';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
leakFunDel
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'doLeak';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '190';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Function pointer to the neuron's current leak function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1af4ded7f575b64ada6c0a6664f638307c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
reverseLeakDel
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'doLeakReverse';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '191';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Function pointer to the leak reverse function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a9fd530a4dd6f7acd6f744ebd51d9c762';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_voltT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'leakRateProb';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Leak tuning parameter - the leak rate applied to the current leak function.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a20889d9b55895bcc719d6aad2766b8f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'leakWeightProbSelect';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '194';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If true, this is a stochastic leak function and the \a leakRateProb value is a probability, otherwise it is a leak rate.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a46a71f61511b5311e14643084109d90f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_voltT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sgnLambda';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '195';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
sgnLambda tuning parameter from the paper - used for specific leak functions.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1afe8825076c4cf3863c677307fec63c61';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'fireCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '198';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
count of this neuron's output
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1ab8f63a1dfdb2992657530ff8a63fdc01';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rcvdMsgCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The number of synaptic messages received.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structneuron_state_1a71fbb9a79e8048b473b6e09d29a64bbe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'SOPSCount';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A count for SOPS calculation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        sec-mem-ref-line = '104';
        sec-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  cp-fileline  = '137';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 55;
        node-label = 'neuronState';
        node-link = {
          node-link-id = 'structneuron_state';
        };
        node-child = {
          child-id = '55';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
reverseReset
doReset
doLeak
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structrandom_spikes';
  cp-name   = 'randomSpikes';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structrandom_spikes_1a1333eb5695ae83d1ffccf24b08bc6288';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'randomRate';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
If the random value is over this, spike.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structrandom_spikes_1a18766f12fc4212349fb61b221f83b779';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
selectedRandom
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'randMethod';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Selected random generator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structrandom_spikes_1a0eb8199754a403ccc8eac256f9193a02';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rndFctVal';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '32';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
For functions that need a second parameter (eg, binomial etc.), this is the second parameter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
  cp-fileline  = '29';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Struct that genreates spikes randomly.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'unionreset_rate';
  cp-name   = 'resetRate';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionreset_rate_1a4bf8a23e4a9874ff73208c681eae1ced';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'linearRate';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionreset_rate_1a54aaba14ce85fd9c5d7b385d98727e36';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nonLinearRate';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'unionreset_rate_1a5a9af6c017d8b70e4db9283f2f7e726b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_voltT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'voltRate';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  cp-fileline  = '74';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
ResetRate
This is a support union for neuron reset rates.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'structreverse_leak_del';
  cp-name   = 'reverseLeakDel';
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  cp-fileline  = '50';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
This fun.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 pointer manages reverse leak functions
_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structselected_spikes';
  cp-name   = 'selectedSpikes';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structselected_spikes_1a666eb9ad96121cf3e4ce134e1a4c12c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outputMesh';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '36';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Array that represents the output levels per tick.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structselected_spikes_1a97727a3be0dbd5813f860c99733048a8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'outputMeshLengh';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Size of the output mesh.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
  cp-fileline  = '35';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'structsynapse_state';
  cp-name   = 'synapseState';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsynapse_state_1a665999819b255f36d756f17b85bc9a03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
tw_lpid
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'destSynapse';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsynapse_state_1a0710dca002b4b3a3f7ae72633bef3691';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
tw_lpid
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'destNeuron';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
      sec-mem-desc-line = '20';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsynapse_state_1ab73db495221608d3eae73d51670d29f0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
id_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mySynapseNum';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsynapse_state_1a9e389b0b50f9ec5e3f5b7b0f5383d6d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'neuronMsgSent';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
      sec-mem-desc-line = '22';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'structsynapse_state_1a3fd766946f24d2fd6a2021ec24939284';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
_statT
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'synapseMsgSent';
      sec-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
      sec-mem-desc-line = '23';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
  cp-fileline  = '18';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Synapse state structure.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Synapses have a destination GID, calculated on creation from the current core and the mapping table. Each synapse talks to its connected neuron, sending messages to the neuron at a TS of ε, generated by the function in assist.h getNextEventTS. @see getNextEventTS(tw_lp* lp). Synapses within the core, I.E., neuron nums < j-1, send a message at ε to the next synapse in the core. This simulates the "synaptic crossbar" found in the TrueNorth architecture.
Synapses also have stats on sent neuron messages, and sent synapse messages.  
_EnD_oF_dEf_TeXt_;
}; /* struct */
file = {
  file-id   = 'assist_8c';
  file-name = 'assist.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'assist_8c_1a30602b11dbfa6bcb90dc00e7942cfb02';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'getNextEventTime';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.c';
      func-mem-desc-line = '13';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the next small-tick event time.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Gets the next event time, based on a random function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'assist_8c_1a4d378196b7fceed090d64ec8820b4065';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'getCurrentBigTick';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.c';
      func-mem-desc-line = '29';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Given a tw_stime, returns the current big tick.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
If the time is in-between
big ticks, this rounds down to the last big tick. There is a bit of a fuzz for
times close to the next big tick so if the current time is within  ::BIG_TICK_ERR
of the next big tick, that will be returned instead. Sane parameters would
probably be around .000001.\xrefitem todo 1.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1a64dc379b459a2b07b40bce35381210e8';
        func-mem-ref-line = '28';
        func-mem-ref-name = 'linearLeak';
    };
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'assist_8h';
  file-name = 'assist.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1a3f7a6e6a1210b6d9d7a42177dcb9634b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_idT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
uint_fast32_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ID type - local id type for bit shifts and ID cases.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1abe1fc1b8f9efd1187e564bcb8de7f815';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_voltT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
int_fast32_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Voltage data type (membrane potential)
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-referenceby = {
        define-mem-ref-id = 'neuron_8c_1a2e78d7d2b70bf7349c3854b3727dcc25';
        define-mem-ref-line = '67';
        define-mem-ref-name = 'resetLinear';
    };
      define-mem-referenceby = {
        define-mem-ref-id = 'neuron_8c_1a09e54832158e2f6abe898437979aae00';
        define-mem-ref-line = '75';
        define-mem-ref-name = 'reverseResetLinear';
    };
      define-mem-referenceby = {
        define-mem-ref-id = 'neuron_8c_1ae630bdf5dd3744870968f07a6971659c';
        define-mem-ref-line = '175';
        define-mem-ref-name = 'integrateSynapse';
    };
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1aa73c5ea0fe4ba938c96e6771b38dcb2a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_weightT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
uint_fast32_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Weight/probability type.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1a5537d30256d443ce07efd3d879a4a720';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_threshT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
int_fast32_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
threshold data type - In the paper, this is two unsigned values and a reversal flag. Here, this is a signed integer.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1ad77e6fc5a9b03d46e7c97b7c4b92e89f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_statT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
int_fast64_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Counter data type for stats.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1abd3130ec511af0cc7768768554bd36a0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = '_regIDT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
_regIDT is a "regional id" type.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This variable type is for storing
coreIDs and localIDs. It must be half the bit size of tw_lpid. 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1aaf4b596256d346dd40bc6f14c3eb9371';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IABS';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(((a) < 0) ? (-a) : (a))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
IABS is an integer absolute value function.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'assist_8h_1ad383c153e77508e2556003da0e4ac3eb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RZER';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(((a) < 0) ? (0) : (a))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
RZER is a floor function - values below zero round up to zero.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'assist_8h_1a7c1688de451e0dea1e11617bce3ec450';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'evtType';
      enum-mem-enum = { enum-name = AXON_OUT; };
      enum-mem-enum = { enum-name = AXON_HEARTBEAT; };
      enum-mem-enum = { enum-name = SYNAPSE_OUT; };
      enum-mem-enum = { enum-name = NEURON_OUT; };
      enum-mem-enum = { enum-name = NEURON_HEARTBEAT; };
      enum-mem-enum = { enum-name = GEN_HEARTBEAT; };
      enum-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      enum-mem-desc-line = '38';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
evtType is a message/event identifier flag
_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'assist_8h_1a30602b11dbfa6bcb90dc00e7942cfb02';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'getNextEventTime';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      func-mem-desc-line = '88';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the next event time, based on a random function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Moved here to allow for
easier abstraciton, and random function replacement.


@param lp Reference to the current LP so that the function can see the RNG

@return a tw_stime value, such that \form#0. A delta for the next
time slice.

Gets the next event time, based on a random function.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'assist_8h_1a4d378196b7fceed090d64ec8820b4065';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'getCurrentBigTick';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      func-mem-desc-line = '96';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Given a tw_stime, returns the current big tick.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param now current time

@return the current big tick time.

If the time is in-between
big ticks, this rounds down to the last big tick. There is a bit of a fuzz for
times close to the next big tick so if the current time is within  ::BIG_TICK_ERR
of the next big tick, that will be returned instead. Sane parameters would
probably be around .000001.\xrefitem todo 1.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1a64dc379b459a2b07b40bce35381210e8';
        func-mem-ref-line = '28';
        func-mem-ref-name = 'linearLeak';
    };
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a67e8e45768f76b984a60fcff2b7c51aa';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'NEURONS_IN_CORE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '55';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Number of neurons per core.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a142b2655c5a899956164ef4e1c394fea';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'CORES_IN_SIM';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '56';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a519a06367b2b3f793c56d3ab78f5b2ef';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'AXONS_IN_CORE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '57';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Number of axions per core.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Generally is set to 1-1 with neurons in core  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a076b99099b46431255982b2bb8ce06fb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNAPSES_IN_CORE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '58';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a74019486208bb1d640927710d5344a94';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_ON';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '59';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Simulation tuning variables.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
noise generator values  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1ab42fd7d6d043114d1147acc77bd7e867';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_RND';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '60';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a516f1496efbe86dedb0e2883bb7e7834';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'RND_MODE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a4875b976acd12ff43cc03898be994253';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_PROB';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '62';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a3ba8de640782035ea9e91ab791d9f14f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_FCT';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '63';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a6f8efb1b6d497ba57f27acadae57dc4b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_OUTBOUND';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '64';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1ab161ae8a99d41559eba4ab3dd8d69218';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_SEL_MODE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '65';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a0a9f8592bd29be6c5c7433c3c0bf42dd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SP_DBG';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '66';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a433873baf41da436ba9c1734c8c5ddd2';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'THRESHOLD_MAX';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Determines the maximum and minimum thresholds for a neuron to fire.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a55f4484944f4174b5e677c0a71b30e4a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'THRESHOLD_MIN';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '69';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Minimum threshold.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @see THRESHOLD_MAX
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a20ef6d41d2f384358522fb59fb6226cb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNAPSE_WEIGHT_MAX';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '70';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Each neuron is connected to the synapses (inputs) within the core it is running in.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
These parameters adjust the input weight given to each synapse.  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1af38a0e2e2483ef81f7ea5175c366ce82';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNAPSE_WEIGHT_MIN';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '71';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Minimum synapse weight.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @see SYNAPSE_WEIGHT_MAX  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1ad39b86a0b748731175572436f6672264';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'CORE_SIZE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '73';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
CORE_SIZE is equal to the number of axions * number of aneurons + num neurons + num axions.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'assist_8h_1a69434dbcf2196fc2fd1ab7cb57fc9491';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'BIG_TICK_ERR';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
      var-mem-desc-line = '74';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/assist.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mapping__specifications_8rtf';
  file-name = 'mapping_specifications.rtf';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/docs/mapping_specifications.rtf';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'input__simulator_8c';
  file-name = 'input_simulator.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'input__simulator_8c_1a7ffa6df128d9c249ace6677ae62d1723';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'uniformGen';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'spikeGen';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.c';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'input__simulator_8h_1a1333eb5695ae83d1ffccf24b08bc6288';
        func-mem-ref-line = '50';
        func-mem-ref-name = 'inputSimulatorState::randomRate';
    };
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'input__simulator_8h';
  file-name = 'input_simulator.h';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'input__simulator_8h_1aa47e87d309aab7727810011578bae86e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
bool(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'spikeGenDel';
      typedef-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      typedef-mem-desc-line = '22';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SpikeGenerator Function Pointer.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Chooses the spike method function.  
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'input__simulator_8h_1aa0d25534cd73156287b1136dd89c0215';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'selectedRandom';
      enum-mem-enum = { enum-name = UNF; };
      enum-mem-enum = { enum-name = NORM; };
      enum-mem-enum = { enum-name = SELECT; };
      enum-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      enum-mem-desc-line = '16';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'input__simulator_8h_1ad6244e86a3542f8d3c64766e7e7c6746';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'uniformGen';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gen_state';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      func-mem-desc-line = '23';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'input__simulator_8h_1a1333eb5695ae83d1ffccf24b08bc6288';
        func-mem-ref-line = '50';
        func-mem-ref-name = 'inputSimulatorState::randomRate';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'input__simulator_8h_1a7a9db804782d8a0c810fa90ae9c2dd05';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'normGen';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'gen_state';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      func-mem-desc-line = '24';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'input__simulator_8h_1a7859f15c9115868c5c0ed88c43756482';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'selectedGen';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'spikeGen';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/input_simulator.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mapping_8c';
  file-name = 'mapping.c';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/mapping.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mapping_8h';
  file-name = 'mapping.h';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/mapping.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'model__main_8c';
  file-name = 'model_main.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'model__main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.c';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'model__main_8h';
  file-name = 'model_main.h';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a67e8e45768f76b984a60fcff2b7c51aa';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'NEURONS_IN_CORE';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 128
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '21';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Number of neurons per core.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1adc924fa4a60574e27538b63daed224d2';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNSAPES_IN_CORE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '24';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
number of synapses per core.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Calculated value, needs to be neurons * axons  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a142b2655c5a899956164ef4e1c394fea';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'CORES_IN_SIM';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '26';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a519a06367b2b3f793c56d3ab78f5b2ef';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'AXONS_IN_CORE';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 128
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '29';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Number of axions per core.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Generally is set to 1-1 with neurons in core  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a74019486208bb1d640927710d5344a94';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_ON';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '34';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Simulation tuning variables.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
noise generator values  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1ab42fd7d6d043114d1147acc77bd7e867';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_RND';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '35';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a516f1496efbe86dedb0e2883bb7e7834';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'RND_MODE';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '36';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a4875b976acd12ff43cc03898be994253';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_PROB';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 50
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '37';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a3ba8de640782035ea9e91ab791d9f14f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_FCT';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 5
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '38';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a6f8efb1b6d497ba57f27acadae57dc4b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_OUTBOUND';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '39';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1ab161ae8a99d41559eba4ab3dd8d69218';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'GEN_SEL_MODE';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '40';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a0a9f8592bd29be6c5c7433c3c0bf42dd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SP_DBG';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '41';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a433873baf41da436ba9c1734c8c5ddd2';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'THRESHOLD_MAX';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 100
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '46';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Determines the maximum and minimum thresholds for a neuron to fire.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a55f4484944f4174b5e677c0a71b30e4a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'THRESHOLD_MIN';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 30
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '50';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Minimum threshold.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @see THRESHOLD_MAX
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a20ef6d41d2f384358522fb59fb6226cb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNAPSE_WEIGHT_MAX';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 10
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '54';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Each neuron is connected to the synapses (inputs) within the core it is running in.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
These parameters adjust the input weight given to each synapse.  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1af38a0e2e2483ef81f7ea5175c366ce82';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'SYNAPSE_WEIGHT_MIN';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '56';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Minimum synapse weight.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 @see SYNAPSE_WEIGHT_MAX  
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1a776ede5752cb807ce8cc1a9c82182bdd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'PER_SYNAPSE_DET_P';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= .50
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '57';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'model__main_8h_1ad39b86a0b748731175572436f6672264';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'CORE_SIZE';
      var-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
      var-mem-desc-line = '63';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
CORE_SIZE is equal to the number of axions * number of aneurons + num neurons + num axions.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/model_main.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'axon_8c';
  file-name = 'axon.c';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'axon_8h';
  file-name = 'axon.h';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/axon.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'neuron_8c';
  file-name = 'neuron.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8c_1ae630bdf5dd3744870968f07a6971659c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'integrateSynapse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
_idT
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'synapseID';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.c';
      func-mem-desc-line = '175';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
function that adds a synapse's value to the current neuron's membrane potential.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param synapseID localID of the synapse sending the message.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1abe1fc1b8f9efd1187e564bcb8de7f815';
        func-mem-ref-line = '19';
        func-mem-ref-name = '_voltT';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'neuron_8h';
  file-name = 'neuron.h';
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'neuron_8h_1a7362d32c8d9b6dc323f5d1b05af9855b';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'leakFunDel';
      typedef-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      typedef-mem-desc-line = '33';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'neuron_8h_1abf61b10b4b6116161a9e5c9d7ac54be1';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'reverseLeakDel';
      typedef-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      typedef-mem-desc-line = '53';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'neuron_8h_1ae7e5990745cd949246894bfb633ca4a2';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'resetFunDel';
      typedef-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      typedef-mem-desc-line = '88';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ResetFunDel - This is a function that handles different reset rate
calculations.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It takes the state of the neuron, and applies
    various reset functions to the neuron's voltage. Some reset functions
described by true north include a zeroing
    function (standard integrate and fire), a linear drop function, and a
non-reduction function.
    Also functions for leaks below.  
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'neuron_8h_1aa939c0acc5b3367975f2f0cb7bc36d17';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'reverseResetDel';
      typedef-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      typedef-mem-desc-line = '118';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is a function that reverses the reset command.
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
Run first, since the reset function is run last.
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = 'neuron_8h_1a48885ea6be5b55a2e24de9f97552d4ee';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'neuronFireMode';
      enum-mem-enum = { enum-name = NFM; enum-value = '= 0'; };
      enum-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      enum-mem-desc-line = '23';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
typedef NeuronFireMode
 Just in case there are multiple fire modes, this enum exists to differentiate
them.
_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a8e52befc10f975c6be39cc93af573d7e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'noLeak';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuron';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
noLeak - A non leaking neuron function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuron The current neuron state.
@param now The current simulation time.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a64dc379b459a2b07b40bce35381210e8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'linearLeak';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuron';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '48';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A linear leak function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuron The current neuron state.
@param now The current simulation time.

LinearLeak is the standard linear leak function from the paper. Using the leakRate parameter inside \link NeuronModel the neuron state \endlink, this follows a simple linear function, reducing the membrane potential by a fixed rate per tick.


@see NeuronModel
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8c_1a4d378196b7fceed090d64ec8820b4065';
        func-mem-ref-line = '29';
        func-mem-ref-name = 'getCurrentBigTick';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a6f4e4d8fc1cf0257b486e01f628d2656';
        func-mem-ref-line = '153';
        func-mem-ref-name = 'neuronState::lastLeakTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1ac5bebec77c5216533ec5f6acd086532e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'revNoLeak';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuron';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '61';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reverse leak function for use when neurons have no defined leak function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuron current neuron state
@param now         tw_stime representing current time of simulation.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a26ced40d7ad7a0b448a136d8724fe18b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'revLinearLeak';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuron';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'now';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '69';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reverse leak function neurons that have a linear leak function assigned.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuron current neuron state
@param now         tw_stime representing current time of simulation.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a6f4e4d8fc1cf0257b486e01f628d2656';
        func-mem-ref-line = '153';
        func-mem-ref-name = 'neuronState::lastLeakTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a7f8eaa35f03747c795a2b727b364537b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'resetZero';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '96';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Resets neuron voltage to 0 after firing.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuronState current neuron state
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a2e78d7d2b70bf7349c3854b3727dcc25';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'resetLinear';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '103';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Resets neuron voltage based on linear function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuronState neuronState

Note: Linear functions use the \link _voltT voltT \endlink data type.
   If a neuron uses a linear reset, this parameter must be set upon neuron creation. 
\xrefitem todo 3.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1abe1fc1b8f9efd1187e564bcb8de7f815';
        func-mem-ref-line = '19';
        func-mem-ref-name = '_voltT';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a6e11be912b4860cd1978b2d8c49b9703';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'resetNone';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '109';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
No reset function - does not reset membrane potential after firing.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param neuronState current neuron state.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a09e54832158e2f6abe898437979aae00';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'reverseResetLinear';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '120';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1abe1fc1b8f9efd1187e564bcb8de7f815';
        func-mem-ref-line = '19';
        func-mem-ref-name = '_voltT';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1ae53276ccdb759ba1ea09806cbf9fc940';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'reverseResetZero';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '122';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 4.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a50b2475c0a8d745eb8f144b72d7eabdf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'reverseResetNone';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'neuronState';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '124';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a01dcc8e3f0132786bd59ecb847013284';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronReverseFinal';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 's';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_bf *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'CV';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Msg_Data *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '215';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
neuronReverseFinal final neuron reversal function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Used to roll back any calls made by the neuron. Decrements receivedSynapseMsgs Reset funs have already
been run at this point @see reverseLeakDel() and @see reverseResetDel()
@param s the neuron state
@param CV transported bitfield
@param m the rollback message
@param lp the lp
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1aa6819d7492f0173f2234ba0b8b0bb674';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronReceiveMessage';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Msg_Data *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '226';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
handles incomming synapse messages.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 In this model, the neurons send messages to axons during "big tick" intervals.
This is done through an event sent upon receipt of the first synapse message of the current big-tick.

   @param st   current neuron state
   @param time time event was received
   @param m    event message data
   @param lp   lp.

neruonReceiveMessage runs when an event is received by a neuron.
The events are handled in the following fashion:
- If the event is a synapse, the neuron integrates the weight of the synapse into its membrane potential.
  - The count of big-tick synapse messages recived is incremented.
  - If the count changes from zero to one, the function creates and queues a heartbeat event for the next big-tick.
- If the event is a heartbeat, the neuron will leak, potentially fire, and reset.

Big-Tick events are sent at time \form#1, so that the the event will arrive at the next bit-tick time.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1a015b6eb45982e1842ee8fc389a099ced';
        func-mem-ref-line = '49';
        func-mem-ref-name = 'Msg_Data::eventType';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1afe8825076c4cf3863c677307fec63c61';
        func-mem-ref-line = '198';
        func-mem-ref-name = 'neuronState::fireCount';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1a7c1688de451e0dea1e11617bce3ec450a226690009a653238a52339561e6c466e';
        func-mem-ref-line = '43';
        func-mem-ref-name = 'NEURON_HEARTBEAT';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8c_1a92d5882a15e11e2a6733483d51428e46';
        func-mem-ref-line = '157';
        func-mem-ref-name = 'neuronShouldFire';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1ab8f63a1dfdb2992657530ff8a63fdc01';
        func-mem-ref-line = '199';
        func-mem-ref-name = 'neuronState::rcvdMsgCount';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1af8935bcba177f2f3dfb9119c39ef7dc5';
        func-mem-ref-line = '157';
        func-mem-ref-name = 'neuronState::receivedSynapseMsgs';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a5efe5de0478ea513ed5d90d89a49fcca';
        func-mem-ref-line = '147';
        func-mem-ref-name = 'neuronState::savedMembranePot';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a71fbb9a79e8048b473b6e09d29a64bbe';
        func-mem-ref-line = '200';
        func-mem-ref-name = 'neuronState::SOPSCount';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a50734a9ba605a083a90814b63d039a03';
        func-mem-ref-line = '156';
        func-mem-ref-name = 'neuronState::savedLastLeakTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a6f4e4d8fc1cf0257b486e01f628d2656';
        func-mem-ref-line = '153';
        func-mem-ref-name = 'neuronState::lastLeakTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a6922b3f3041346eb83cfc6352a22277b';
        func-mem-ref-line = '155';
        func-mem-ref-name = 'neuronState::savedLastActiveTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0658ad1f8b57a00589c6ea84f9a4ab13';
        func-mem-ref-line = '152';
        func-mem-ref-name = 'neuronState::lastActiveTime';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1a7c1688de451e0dea1e11617bce3ec450a6ad6b93d8a818550e7246f6e0d143afb';
        func-mem-ref-line = '41';
        func-mem-ref-name = 'SYNAPSE_OUT';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8c_1ae630bdf5dd3744870968f07a6971659c';
        func-mem-ref-line = '175';
        func-mem-ref-name = 'integrateSynapse';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1aefc820e92a74047ec7ed74c1c45f818f';
        func-mem-ref-line = '51';
        func-mem-ref-name = 'Msg_Data::localID';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1aa430f424f34dc59dc27736e27ec61320';
        func-mem-ref-line = '190';
        func-mem-ref-name = 'neuronState::doLeak';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8c_1ae071ef984b7e0dd4ec38fca91e0abe39';
        func-mem-ref-line = '166';
        func-mem-ref-name = 'neuronFire';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8c_1ab1f4997e4bfe11e78faa6d37748aee67';
        func-mem-ref-line = '169';
        func-mem-ref-name = 'neuronPostFire';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1a2e49a6bcc6c45ade722f746b1ea707f2';
        func-mem-ref-line = '50';
        func-mem-ref-name = 'Msg_Data::rndCallCount';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1ae071ef984b7e0dd4ec38fca91e0abe39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronFire';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Msg_Data *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '229';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
neuronFire manages a firing event.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Firing events occur when a synchro message is received, so these calculations are done on big-ticks only.  
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1ab1f4997e4bfe11e78faa6d37748aee67';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronPostFire';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Msg_Data *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '231';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
neuronPostFire manages post-firing events, including reset functions
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a06ee765bfae45fe9b7f0619bf4abe63d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'generateWaitEvent';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '233';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
generateWaitEvent creates a new wait event to this neuron for big-tick synchronization
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1ae630bdf5dd3744870968f07a6971659c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'integrateSynapse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
_idT
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'synapseID';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '240';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
function that adds a synapse's value to the current neuron's membrane potential.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param synapseID localID of the synapse sending the message.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'assist_8h_1abe1fc1b8f9efd1187e564bcb8de7f815';
        func-mem-ref-line = '19';
        func-mem-ref-name = '_voltT';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a766dff9e530486b055e97ebe392268b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'sendHeartbeat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '248';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Function that sends a heartbeat message to this neuron.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param lp   <#lp description#>
@param time <#time description#>
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1a92d5882a15e11e2a6733483d51428e46';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronShouldFire';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '257';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks to see if a neuron should fire.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 5.

@param st neuron state

@return true if the neuron is ready to fire.
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a0fdd8f44c4105a94e17c4c58a51db486';
        func-mem-ref-line = '146';
        func-mem-ref-name = 'neuronState::membranePot';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a132470c4c17828c209e3403ccf7ee680';
        func-mem-ref-line = '148';
        func-mem-ref-name = 'neuronState::threshold';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'neuron_8h_1a3ec480684e7a2cfc67a8ef7ac1bf57b9';
        func-mem-ref-line = '170';
        func-mem-ref-name = 'neuronState::negThresReset';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'neuron_8h_1adadd3095c39786607629697406f3d1eb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'neuronPostIntegrate';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
neuronState *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'st';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_stime
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'time';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
tw_lp *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'lp';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'didFire';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
      func-mem-desc-line = '267';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Function that runs after integration & firing, for reset function calls.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param st      state
@param time    event time
@param lp      lp
@param didFire did the neuron fire during this big tick?
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1aa6819d7492f0173f2234ba0b8b0bb674';
        func-mem-ref-line = '104';
        func-mem-ref-name = 'neuronReceiveMessage';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'neuron_8c_1ae630bdf5dd3744870968f07a6971659c';
        func-mem-ref-line = '175';
        func-mem-ref-name = 'integrateSynapse';
    };
    }; /* func-member */
    };
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/neuron.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'synapse_8c';
  file-name = 'synapse.c';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'synapse_8h';
  file-name = 'synapse.h';
  file-full-name  = '/Users/Mark/Development/TrueNorth/tnt_benchmark/models/synapse.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
